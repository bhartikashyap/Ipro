{"version":3,"file":"src_app_pages_changepassword_changepassword_module_ts.js","mappings":"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","sources":["./src/app/pages/changepassword/changepassword-routing.module.ts","./src/app/pages/changepassword/changepassword.module.ts","./src/app/pages/changepassword/changepassword.page.ts","./src/app/utility/validator.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChangepasswordPage } from './changepassword.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangepasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChangepasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChangepasswordPageRoutingModule } from './changepassword-routing.module';\n\nimport { ChangepasswordPage } from './changepassword.page';\nimport { HttpClient } from '@angular/common/http';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\nimport {ShareComponentModule} from '../../components/share-component-module';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ShareComponentModule,\n    IonicModule, TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n    ChangepasswordPageRoutingModule\n  ],\n  declarations: [ChangepasswordPage]\n})\nexport class ChangepasswordPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { MenuController } from \"@ionic/angular\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { ApiService } from \"src/app/services/api.service\";\nimport { UtilService } from \"src/app/services/util.service\";\nimport { message, session } from \"src/app/utility/message\";\nimport { pattern } from \"src/app/utility/pattern\";\nimport { ConfirmedValidator } from 'src/app/utility/validator';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.page.html',\n  styleUrls: ['./changepassword.page.scss'],\n})\nexport class ChangepasswordPage implements OnInit {\n  form: FormGroup;\n  get formControls() {\n    return this.form.controls;\n  }\n  submitted = false;\n  validationMessage: any;\n  type:any=\"password\";\n  constructor(\n    private router: Router,\n    private menuCtrl: MenuController,\n    private _translate: TranslateService,\n    private utility: UtilService,\n    private formBuilder: FormBuilder,\n    private apiService: ApiService\n  ) { }\n\n  initForm() {\n    this.form = this.formBuilder.group({\n    \n      oldpassword: [\"\", [Validators.required, Validators.maxLength(100)]],\n      newpassword: [\"\", [Validators.required, Validators.maxLength(100)]],\n      confirmpassword: [\"\", [Validators.required, Validators.maxLength(100)]\n    ]\n    },{ \n      validator: ConfirmedValidator('newpassword', 'confirmpassword')\n    }\n    );\n\n   \n    let messages = this.utility.translateText('MSG')\n    this.validationMessage = {\n    \n      oldpassword: [\n        { type: \"required\", message: messages.required },\n        { type: \"pattern\", message: messages.password },\n        { type: \"maxlength\", message: message.maxLength(100,messages.maxLength,messages.characters) },\n      ],\n      newpassword: [\n        { type: \"required\", message: messages.required },\n        { type: \"pattern\", message: messages.password },\n        { type: \"maxlength\", message: message.maxLength(100,messages.maxLength,messages.characters) },\n      ],\n      confirmpassword: [\n        { type: \"required\", message: messages.required },\n        { type: \"pattern\", message: messages.password },\n        { type: \"maxlength\", message: message.maxLength(100,messages.maxLength,messages.characters) },\n      ],\n    };\n  }\n  ngOnInit() {\n    this.initForm();\n    this.menuCtrl.enable(false);\n  }\n\n  changeType() {\n    if (this.type == \"password\") {\n      this.type = \"text\";\n    } else {\n      this.type = \"password\";\n    }\n  }\n  signup() {\n    this.router.navigate([\"/register\"]);\n  }\n  async changePassword() {\n    this.submitted = true;\n    console.log(this.form);\n    if (this.form.valid) {\n      this.submitted = false;\n      let params: any = {\n        \"currentPassword\" :this.form.getRawValue().oldpassword,\n        \"newPassword\":this.form.getRawValue().newpassword\n      }\n     // this.form.getRawValue();\n      console.log(params);\n      \n      let loading = await this.utility.presentLoading();\n      let url:any = await this.utility.changeMenu();\n     this.apiService\n          .changePassword(params)\n          .then((res: any) => {\n          loading.dismiss();\n          if (res.status == 1) {\n           \n            this.utility.presentToast(this.utility.translateText('MSG').passwordChanged,\"top\");\n            this.form.reset();\n           \n            this.router.navigate([url])\n          } else {\n            this.utility.presentToast(this.utility.translateText('MSG').someissueInNetwork,\"bottom\");\n          }\n        })\n        .catch((err: any) => {\n          console.log(err);\n          loading.dismiss();\n        });\n      console.log(params);\n    }\n  }\n\n}\n","import { FormGroup } from '@angular/forms';\n    \nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n            return;\n        }\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ confirmedValidator: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}"],"names":[],"sourceRoot":"webpack:///"}