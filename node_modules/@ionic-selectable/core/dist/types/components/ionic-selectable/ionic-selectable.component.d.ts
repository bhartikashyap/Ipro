import { ComponentInterface, EventEmitter } from '../../stencil-public-runtime';
import { StyleEventDetail, AnimationBuilder, HeaderFn } from '@ionic/core';
import { IonicSelectableInfiniteScrolledEvent, IonicSelectableSearchingEvent, IonicSelectableSearchSuccessedEvent, IonicSelectableSearchFailedEvent, IonicSelectableSelectedEvent, IonicSelectableChangedEvent, IonicSelectableItemAddingEvent, IonicSelectableClearedEvent, IonicSelectableItemsChangedEvent, IonicSelectableOpenedEvent, IonicSelectableClosedEvent, IonicSelectableFocusedEvent, IonicSelectableBlurredEvent, TemplateRenderFn, HasTemplateRenderFn } from './ionic-selectable.interfaces.component';
import { IonicSelectableModalComponent } from '../ionic-selectable-modal/ionic-selectable-modal.component';
/**
 * @virtualProp {"ios" | "md"} mode - The mode determines which platform styles to use.
 *
 * @part placeholder - The text displayed in the select when there is no value.
 * @part text - The displayed value of the select.
 * @part icon - The select icon container.
 * @part icon-inner - The select icon.
 */
export declare class IonicSelectableComponent implements ComponentInterface {
  private element;
  private id;
  private isInited;
  private isRendered;
  private buttonElement?;
  private modalElement;
  private isChangeInternal;
  private groups;
  selectableModalComponent: IonicSelectableModalComponent;
  filteredGroups: Array<{
    value: string;
    text: string;
    items: any[];
  }>;
  hasFilteredItems: boolean;
  hasObjects: boolean;
  hasGroups: boolean;
  footerButtonsCount: number;
  isSearching: boolean;
  isAddItemTemplateVisible: boolean;
  isFooterVisible: boolean;
  addItemTemplateFooterHeight: string;
  itemToAdd: any;
  selectedItems: any[];
  private valueItems;
  private itemsToConfirm;
  /**
   * Determines whether Modal is opened.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#isopened).
   *
   * @default false
   * @readonly
   * @memberof IonicSelectableComponent
   */
  isOpened: boolean;
  /**
   * Determines whether the component is disabled.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#isdisabled).
   *
   * @default false
   * @memberof IonicSelectableComponent
   */
  isDisabled: boolean;
  /**
   * A placeholder.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#placeholder).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  placeholder?: string | null;
  /**
   * Close button text.
   * The field is only applicable to **iOS** platform, on **Android** only Cross icon is displayed.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#closebuttontext).
   *
   * @default 'Cancel'
   * @memberof IonicSelectableComponent
   */
  closeButtonText: string;
  /**
   * Close button slot. [Ionic slots](https://ionicframework.com/docs/api/buttons) are supported.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#closebuttonslot).
   *
   * @default 'start'
   * @memberof IonicSelectableComponent
   */
  closeButtonSlot: string;
  /**
   * Item icon slot. [Ionic slots](https://ionicframework.com/docs/api/item) are supported.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemiconslot).
   *
   * @default 'start'
   * @memberof IonicSelectableComponent
   */
  itemIconSlot: string;
  /**
   * Confirm button text.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#confirmbuttontext).
   *
   * @default 'OK'
   * @memberof IonicSelectableComponent
   */
  confirmButtonText: string;
  /**
   * Clear button text.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#clearbuttontext).
   *
   * @default 'Clear'
   * @memberof IonicSelectableComponent
   */
  clearButtonText: string;
  /**
   * Add button text.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#addbuttontext).
   *
   * @default 'Add'
   * @memberof IonicSelectableComponent
   */
  addButtonText: string;
  /**
   * The name of the control, which is submitted with the form data.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#name).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  name: string;
  /**
   * Determines whether multiple items can be selected.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#selectedText).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  selectedText?: string | null;
  /**
   * Determines whether multiple items can be selected.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#ismultiple).
   *
   * @default false
   * @memberof IonicSelectableComponent
   */
  isMultiple: boolean;
  /**
   * The value of the component.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#value).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  value?: any | null;
  /**
   * Is set to true, the value will be extracted from the itemValueField of the objects.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#shouldStoreItemValue).
   *
   * @default false
   * @memberof IonicSelectableComponent
   */
  shouldStoreItemValue?: boolean;
  /**
   * A list of items.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#items).
   *
   * @default []
   * @memberof IonicSelectableComponent
   */
  items: any[];
  /**
   * A list of items to disable.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#disableditems).
   *
   * @default []
   * @memberof IonicSelectableComponent
   */
  disabledItems: any[];
  /**
   * Item property to use as a unique identifier, e.g, `'id'`.
   * **Note**: `items` should be an object array.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemvaluefield).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  itemValueField: string;
  /**
   * Item property to display, e.g, `'name'`.
   * **Note**: `items` should be an object array.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemtextfield).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  itemTextField: string;
  /**
   * Determines whether Modal should be closed when backdrop is clicked.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#shouldbackdropclose).
   *
   * @default true
   * @memberof IonicSelectableComponent
   */
  shouldBackdropClose: boolean;
  /**
   * Modal CSS class.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#modalcssclass).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  modalCssClass: string;
  /**
   * Modal enter animation.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#modalenteranimation).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  modalEnterAnimation: AnimationBuilder;
  /**
   * Modal leave animation.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#modalleaveanimation).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  modalLeaveAnimation: AnimationBuilder;
  /**
   * Text of [Ionic Label](https://ionicframework.com/docs/api/label).
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#label).
   *
   * @readonly
   * @default null
   * @memberof IonicSelectableComponent
   */
  titleText: string;
  /**
   *
   * Group property to use as a unique identifier to group items, e.g. `'country.id'`.
   * **Note**: `items` should be an object array.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#groupvaluefield).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  groupValueField: string;
  /**
   * Group property to display, e.g. `'country.name'`.
   * **Note**: `items` should be an object array.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#grouptextfield).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  groupTextField: string;
  /**
   * Determines whether Ionic [InfiniteScroll](https://ionicframework.com/docs/api/infinite-scroll) is enabled.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hasinfinitescroll).
   *
   * @default false
   * @memberof IonicSelectableComponent
   */
  hasInfiniteScroll: boolean;
  /**
   * The threshold distance from the bottom of the content to call the infinite output event when scrolled.
   * Use the value 100px when the scroll is within 100 pixels from the bottom of the page.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#infinite-scroll).
   *
   * @default '100px'
   * @memberof IonicSelectableComponent
   */
  infiniteScrollThreshold: string;
  /**
   * Determines whether Ionic [VirtualScroll](https://ionicframework.com/docs/api/virtual-scroll) is enabled.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hasvirtualscroll).
   *
   * @default false
   * @memberof IonicSelectableComponent
   */
  hasVirtualScroll: boolean;
  /**
   * See Ionic VirtualScroll [approxHeaderHeight](https://ionicframework.com/docs/api/virtual-scroll).
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#virtualscrollheaderfn).
   *
   * @default 30
   * @memberof IonicSelectableComponent
   */
  virtualScrollApproxHeaderHeight: number;
  /**
   * See Ionic VirtualScroll [approxItemHeight](https://ionicframework.com/docs/api/virtual-scroll).
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#virtualscrollheaderfn).
   *
   * @default 45
   * @memberof IonicSelectableComponent
   */
  virtualScrollApproxItemHeight: number;
  /**
   * Determines whether Confirm button is visible for single selection.
   * By default Confirm button is visible only for multiple selection.
   * **Note**: It is always true for multiple selection and cannot be changed.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hasconfirmbutton).
   *
   * @default false
   * @memberof IonicSelectableComponent
   */
  hasConfirmButton: boolean;
  /**
   * Determines whether to allow adding items.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#canadditem).
   *
   * @default false
   * @memberof IonicSelectableComponent
   */
  canAddItem: boolean;
  /**
   * Determines whether to show Clear button.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#canclear).
   * @default false
   * @memberof IonicSelectableComponent
   */
  canClear: boolean;
  /**
   * Determines whether to show [Searchbar](https://ionicframework.com/docs/api/searchbar).
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#cansearch).
   *
   * @default false
   * @memberof IonicSelectableComponent
   */
  canSearch: boolean;
  /**
   * Determines the search is delegate to event, and not handled internally.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#cansearch).
   *
   * @default false
   * @memberof IonicSelectableComponent
   */
  shouldDelegateSearchToEvent: boolean;
  /**
   * How long, in milliseconds, to wait to filter items or to trigger `onSearch` event after each keystroke.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#searchdebounce).
   *
   * @default 250
   * @memberof IonicSelectableComponent
   */
  searchDebounce: number;
  /**
   * A placeholder for [Searchbar](https://ionicframework.com/docs/api/searchbar).
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#searchplaceholder).
   *
   * @default 'Search'
   * @memberof IonicSelectableComponent
   */
  searchPlaceholder: string;
  /**
   * Text in [Searchbar](https://ionicframework.com/docs/api/searchbar).
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#searchtext).
   *
   * @default ''
   * @memberof IonicSelectableComponent
   */
  searchText: string;
  /**
   * Text to display when no items have been found during search.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#searchfailtext).
   *
   * @default 'No items found.'
   * @memberof IonicSelectableComponent
   */
  searchFailText: string;
  /**
   * Determines whether Searchbar should receive focus when Modal is opened.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#shouldfocussearchbar).
   *
   * @default false
   * @memberof IonicSelectableComponent
   */
  shouldFocusSearchbar: boolean;
  /**
   * Determines whether user has typed anything in [Searchbar](https://ionicframework.com/docs/api/searchbar).
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hassearchtext).
   *
   * @default false
   * @readonly
   * @memberof IonicSelectableComponent
   */
  hasSearchText: boolean;
  /**
   * Set the cancel button icon of the [Searchbar](https://ionicframework.com/docs/api/searchbar).
   * Only applies to md mode. Defaults to "arrow-back-sharp".
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hassearchtext).
   *
   * @default 'arrow-back-sharp'
   * @memberof IonicSelectableComponent
   */
  searchCancelButtonIcon: string;
  /**
   * Set the the cancel button text of the [Searchbar](https://ionicframework.com/docs/api/searchbar).
   * Only applies to ios mode.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hassearchtext).
   *
   * @default 'Cancel'
   * @memberof IonicSelectableComponent
   */
  searchCancelButtonText: string;
  /**
   * Set the clear icon of the [Searchbar](https://ionicframework.com/docs/api/searchbar).
   * Defaults to "close-circle" for ios and "close-sharp" for md.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hassearchtext).
   *
   * @memberof IonicSelectableComponent
   */
  searchClearIcon: string;
  /**
   * A hint to the browser for which keyboard to display.
   * Possible values: "none", "text", "tel", "url", "email", "numeric", "decimal", and "search".
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hassearchtext).
   * @default 'none'
   * @memberof IonicSelectableComponent
   */
  searchInputmode: 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';
  /**
   * The icon to use as the search icon in the [Searchbar](https://ionicframework.com/docs/api/searchbar).
   * Defaults to "search-outline" in ios mode and "search-sharp" in md mode.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hassearchtext).
   * @default 'none'
   * @memberof IonicSelectableComponent
   */
  searchIcon: string;
  /**
   * Sets the behavior for the cancel button of the [Searchbar](https://ionicframework.com/docs/api/searchbar).
   * Defaults to "never".
   * Setting to "focus" shows the cancel button on focus.
   * Setting to "never" hides the cancel button.
   * Setting to "always" shows the cancel button regardless of focus state.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hassearchtext).
   * @default 'none'
   * @memberof IonicSelectableComponent
   */
  searchShowCancelButton: 'always' | 'focus' | 'never';
  /**
   * Determines whether Confirm button is enabled.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#isconfirmbuttonenabled).
   *
   * @default true
   * @memberof IonicSelectableComponent
   */
  isConfirmButtonEnabled: boolean;
  /**
   * Header color. [Ionic colors](https://ionicframework.com/docs/theming/advanced#colors) are supported.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#headercolor).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  headerColor: string;
  /**
   * Group color. [Ionic colors](https://ionicframework.com/docs/theming/advanced#colors) are supported.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#groupcolor).
   *
   * @default null
   * @memberof IonicSelectableComponent
   */
  groupColor: string;
  /**
   * Fires when the user has scrolled to the end of the list.
   * **Note**: `hasInfiniteScroll` has to be enabled.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#oninfinitescroll).
   *
   * @memberof IonicSelectableComponent
   */
  infiniteScrolled: EventEmitter<IonicSelectableInfiniteScrolledEvent<string>>;
  /**
   * Fires when the user is typing in Searchbar.
   * **Note**: `canSearch` and `shouldDelegateSearchToEvent` has to be enabled.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onsearch).
   *
   * @memberof IonicSelectableComponent
   */
  searching: EventEmitter<IonicSelectableSearchingEvent<string>>;
  /**
   * Fires when no items have been found.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onsearchfail).
   *
   * @memberof IonicSelectableComponent
   */
  searchFailed: EventEmitter<IonicSelectableSearchFailedEvent<string>>;
  /**
   * Fires when some items have been found.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onsearchsuccess).
   *
   * @memberof IonicSelectableComponent
   */
  searchSuccessed: EventEmitter<IonicSelectableSearchSuccessedEvent<string>>;
  /**
   * Fires when Add item button has been clicked.
   * When the button has been clicked `ionicSelectableAddItemTemplate` will be shown. Use the template to create
   * a form to add item.
   * **Note**: `canAddItem` has to be enabled.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemAdding).
   *
   * @memberof IonicSelectableComponent
   */
  itemAdding: EventEmitter<IonicSelectableItemAddingEvent<any[]>>;
  /**
   * Fires when Clear button has been clicked.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onclear).
   *
   * @memberof IonicSelectableComponent
   */
  cleared: EventEmitter<IonicSelectableClearedEvent<any[]>>;
  /**
   * Fires when item/s has been selected and Modal closed.
   * if isMultiple is set to true 'value' is an array else is a object
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onChanged).
   *
   * @memberof IonicSelectableComponent
   */
  changed: EventEmitter<IonicSelectableChangedEvent<any[]>>;
  /**
   * Fires when items has changed.
   * if isMultiple is set to true 'value' is an array else is a object
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onChanged).
   *
   * @memberof IonicSelectableComponent
   */
  itemsChanged: EventEmitter<IonicSelectableItemsChangedEvent<any[]>>;
  /**
   * Fires when an item has been selected or unselected.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onselect).
   *
   * @memberof IonicSelectableComponent
   */
  selected: EventEmitter<IonicSelectableSelectedEvent<any>>;
  /**
   * Fires when Modal has been opened.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onopen).
   *
   * @memberof IonicSelectableComponent
   */
  opened: EventEmitter<IonicSelectableOpenedEvent<any[]>>;
  /**
   * Fires when Modal has been closed.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onclose).
   *
   * @memberof IonicSelectableComponent
   */
  closed: EventEmitter<IonicSelectableClosedEvent<any[]>>;
  /**
   * Fires when has focus
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onFocused).
   *
   * @memberof IonicSelectableComponent
   */
  focused: EventEmitter<IonicSelectableFocusedEvent<any[]>>;
  /**
   * Fires when loses focus.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#onBlurred).
   *
   * @memberof IonicSelectableComponent
   */
  blurred: EventEmitter<IonicSelectableBlurredEvent<any[]>>;
  /**
   * Emitted when the styles change.
   * @internal
   */
  ionStyle: EventEmitter<StyleEventDetail>;
  /**
   * NOTE: only Vanilla JS API.
   */
  templateRender?: TemplateRenderFn;
  /**
   * NOTE: only Vanilla JS API.
   */
  hasTemplateRender?: HasTemplateRenderFn;
  /**
   * See Ionic VirtualScroll [headerFn](https://ionicframework.com/docs/api/virtual-scroll).
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#virtualscrollheaderfn).
   *
   * @memberof IonicSelectableComponent
   */
  virtualScrollHeaderFn: HeaderFn;
  protected onShouldStoreItemValueChanged(value: boolean): void;
  protected onItemValueFieldChanged(value: string): void;
  protected onItemTextFieldChanged(value: string): void;
  protected onItemsChanged(value: []): void;
  protected onDisabledChanged(): void;
  protected onValueChanged(newValue: any | any[]): void;
  protected onSearchTextChanged(newValue: string): void;
  protected onIsMultipleChanged(): void;
  protected onDisabledItemsChanged(): void;
  connectedCallback(): Promise<void>;
  componentWillLoad(): void;
  /**
   * Determines whether any item has been selected.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hasvalue).
   *
   * @returns A boolean determining whether any item has been selected.
   * @memberof IonicSelectableComponent
   */
  hasValue(): Promise<boolean>;
  /**
   * Opens Modal.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#open).
   *
   * @returns Promise that resolves when Modal has been opened.
   * @memberof IonicSelectableComponent
   */
  open(): Promise<void>;
  /**
   * Closes Modal.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#close).
   *
   * @returns Promise that resolves when Modal has been closed.
   * @memberof IonicSelectableComponent
   */
  close(): Promise<void>;
  /**
   * Return a list of items that are selected and awaiting confirmation by user, when he has clicked Confirm button.
   * After the user has clicked Confirm button items to confirm are cleared.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#itemstoconfirm).
   *
   * @returns a promise whit de list of items that are selected and awaiting confirmation by user
   * @memberof IonicSelectableComponent
   */
  getItemsToConfirm(): Promise<any[]>;
  /**
   * Confirms selected items by updating value.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#confirm).
   *
   * @memberof IonicSelectableComponent
   */
  confirm(): Promise<void>;
  /**
   * Clears value.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#clear).
   *
   * @memberof IonicSelectableComponent
   */
  clear(): Promise<void>;
  /**
   * Enables infinite scroll.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#enableinfinitescroll).
   *
   * @memberof IonicSelectableComponent
   */
  enableInfiniteScroll(): Promise<void>;
  /**
   * Disables infinite scroll.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#disableinfinitescroll).
   *
   * @memberof IonicSelectableComponent
   */
  disableInfiniteScroll(): Promise<void>;
  /**
   * Ends infinite scroll.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#endinfinitescroll).
   *
   * @memberof IonicSelectableComponent
   */
  endInfiniteScroll(): Promise<void>;
  /**
   * Scrolls to the top of Modal content.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#scrolltotop).
   *
   * @returns Promise that resolves when scroll has been completed.
   * @memberof IonicSelectableComponent
   */
  scrollToTop(): Promise<any>;
  /**
   * Scrolls to the bottom of Modal content.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#scrolltobottom).
   *
   * @returns Promise that resolves when scroll has been completed.
   * @memberof IonicSelectableComponent
   */
  scrollToBottom(): Promise<any>;
  /**
   * Starts search process by showing Loading spinner.
   * Use it together with `onSearch` event to indicate search start.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#startsearch).
   *
   * @memberof IonicSelectableComponent
   */
  startSearch(): Promise<void>;
  /**
   * Ends search process by hiding Loading spinner and refreshing items.
   * Use it together with `onSearch` event to indicate search end.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#endsearch).
   *
   * @memberof IonicSelectableComponent
   */
  endSearch(): Promise<void>;
  /**
   * Shows Loading spinner.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#showloading).
   *
   * @memberof IonicSelectableComponent
   */
  showLoading(): Promise<void>;
  /**
   * Hides Loading spinner.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hideloading).
   *
   * @memberof IonicSelectableComponent
   */
  hideLoading(): Promise<void>;
  /**
   * Adds item.
   * **Note**: If you want an item to be added to the original array as well use two-way data binding syntax on `[(items)]` field.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#additem).
   *
   * @param item Item to add.
   * @returns Promise that resolves when item has been added.
   * @memberof IonicSelectableComponent
   */
  addItem(item: any): Promise<any>;
  /**
   * Deletes item.
   * **Note**: If you want an item to be deleted from the original array as well use two-way data binding syntax on `[(items)]` field.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#deleteitem).
   *
   * @param item Item to delete.
   * @returns Promise that resolves when item has been deleted.
   * @memberof IonicSelectableComponent
   */
  deleteItem(item: any): Promise<any>;
  /**
   * Selects or deselects all or specific items.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#toggleitems).
   *
   * @param isSelect Determines whether to select or deselect items.
   * @param [items] Items to toggle. If items are not set all items will be toggled.
   * @memberof IonicSelectableComponent
   */
  toggleItems(isSelect: boolean, items?: any[]): Promise<void>;
  /**
   * Shows `ionicSelectableAddItemTemplate`.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#showadditemtemplate).
   *
   * @memberof IonicSelectableComponent
   */
  showAddItemTemplate(): Promise<void>;
  /**
   * Hides `ionicSelectableAddItemTemplate`.
   * See more on [GitHub](https://github.com/eakoriakin/ionic-selectable/wiki/Documentation#hideadditemtemplate).
   *
   * @memberof IonicSelectableComponent
   */
  hideAddItemTemplate(): Promise<void>;
  clearItems(): void;
  closeModal(): void;
  addItemClick(): void;
  onSearchbarValueChanged(event: CustomEvent): void;
  isItemSelected(item: any): boolean;
  isItemDisabled(item: any): boolean;
  selectItem(item: any): void;
  confirmSelection(): void;
  getMoreItems(): void;
  private setValue;
  private setItems;
  private filterItems;
  private addSelectedItem;
  private deleteSelectedItem;
  private getItem;
  private getItemValue;
  private getStoredItemValue;
  private toggleAddItemTemplate;
  private emitSelected;
  private emitChanged;
  private emitOpened;
  private emitClosed;
  private emitCleared;
  private emitItemAdding;
  private emitItemsChanged;
  private emitSearching;
  private emitIonInfiniteScrolled;
  private emitOnSearchSuccessedOrFailed;
  private isNullOrWhiteSpace;
  setHasSearchText(searchText: string): void;
  private countFooterButtons;
  private areGroupsEmpty;
  getItemText(item: any): string;
  private getPropertyValue;
  private parseValue;
  private generateText;
  private getText;
  private emitStyle;
  private whatchModalEvents;
  private setFocus;
  private onClick;
  private onFocus;
  private onBlur;
  render(): void;
}
